A51 MACRO ASSEMBLER  QUESTION3                                                            08/29/2017 01:43:55 PAGE     1


MACRO ASSEMBLER A51 V8.2.5.0
OBJECT MODULE PLACED IN .\Objects\question3.obj
ASSEMBLER INVOKED BY: C:\Keil_v5\C51\BIN\A51.EXE question3.asm SET(SMALL) DEBUG PRINT(.\Listings\question3.lst) OBJECT(.
                      \Objects\question3.obj) EP

LOC  OBJ            LINE     SOURCE

                       1     ;Display the contents stored at a memloc on the LCD

  00A0                 2     LCD_data equ P2    ;LCD Data port

  0080                 3     LCD_rs   equ P0.0  ;LCD Register Select

  0081                 4     LCD_rw   equ P0.1  ;LCD Read/Write

  0082                 5     LCD_en   equ P0.2  ;LCD Enable

                       6     

0000                   7     org 00h

0000 020137            8     ljmp main

                       9     

000B                  10     org 0BH

000B 02033F           11     ljmp timer_int0

                      12     

001B                  13     org 1BH

001B 020346           14     ljmp timer_int1

                      15     

0100                  16     org 100H

0100                  17     init_clock:                                             ;Initialises the clock

0100 757031           18             mov 70H,#31H                            

0103 757132           19             mov 71H,#32H

0106 75723A           20             mov 72H,#':'

0109 757335           21             mov 73H,#35H

010C 757439           22             mov 74H,#39H

010F 75753A           23             mov 75H,#':'

0112 757633           24             mov 76H,#33H

0115 757730           25             mov 77H,#30H

0118 757820           26             mov 78H,#' '

011B 757920           27             mov 79H,#' '

011E 757A20           28             mov 7AH,#' '

0121 757B20           29             mov 7BH,#' '

0124 22               30     ret

                      31     

0125                  32     start_timers:

0125 7F1E             33             mov r7,#30D                                     ;To ensure one sec delay

0127 758911           34             mov TMOD,#11H                           ;T0,T1 -> mode 1

012A 758800           35             mov TCON,#00H

012D 75A88A           36             mov IE,#8AH

0130 D2BB             37             setb PT1                                        ;Setting higher priority to timer1 
                             than timer0

0132 D28C             38             setb TR0

0134 D28E             39             setb TR1

0136 22               40     ret

                      41     

0137                  42     main:

0137 7581C7           43             mov SP,#0C7H

                      44             

013A 75900F           45             mov P1,#0FH                                     ;First configure switches as input 
                             and LED’s as output

013D 3162             46             acall lcd_init                          ;initialise LCD

013F 31D2             47             acall delay

0141 31D2             48             acall delay

0143 31D2             49             acall delay

                      50             

0145 3100             51             acall init_clock

0147 3125             52             acall start_timers

                      53             

0149                  54     loop_main:

0149 7480             55             mov   a,#80H                            ;Put cursor on first row,0 column

A51 MACRO ASSEMBLER  QUESTION3                                                            08/29/2017 01:43:55 PAGE     2

014B 319F             56             acall lcd_command                       ;send command to LCD

014D 31D2             57             acall delay

014F 900400           58             mov   dptr,#my_string           ;Load DPTR with sring1 Addr

0152 31BF             59             acall lcd_sendstring            ;call text strings sending routine

0154 31D2             60             acall delay

                      61                                                                     ;Display the value of memor
                             y address and content in Hex on LCD

0156 74C4             62             mov   a,#0C4H                                   ;Put cursor on second row,0 column

0158 319F             63             acall lcd_command

015A 31D2             64             acall delay

015C 7870             65             mov   r0,#70H

015E 31C9             66             acall lcd_sendstring_name       ;eg: Display "12 53"  where memory location 12H con
                             tains value 53H

                      67             

0160 80E7             68             sjmp loop_main                          ;return to loop

                      69             

                      70     ;======================================

                      71     ;                       LCD subroutines

                      72     ;======================================

0162                  73     lcd_init:

0162 75A038           74              mov   LCD_data,#38H  ;Function set: 2 Line, 8-bit, 5x7 dots

0165 C280             75              clr   LCD_rs         ;Selected command register

0167 C281             76              clr   LCD_rw         ;We are writing in instruction register

0169 D282             77              setb  LCD_en         ;Enable H->L

016B 31D2             78                      acall delay

016D C282             79              clr   LCD_en

016F 31D2             80                  acall delay

                      81     

0171 75A00C           82              mov   LCD_data,#0CH  ;Display on, Curson off

0174 C280             83              clr   LCD_rs         ;Selected instruction register

0176 C281             84              clr   LCD_rw         ;We are writing in instruction register

0178 D282             85              setb  LCD_en         ;Enable H->L

017A 31D2             86                      acall delay

017C C282             87              clr   LCD_en

                      88              

017E 31D2             89                      acall delay

0180 75A001           90              mov   LCD_data,#01H  ;Clear LCD

0183 C280             91              clr   LCD_rs         ;Selected command register

0185 C281             92              clr   LCD_rw         ;We are writing in instruction register

0187 D282             93              setb  LCD_en         ;Enable H->L

0189 31D2             94                      acall delay

018B C282             95              clr   LCD_en

                      96              

018D 31D2             97                      acall delay

                      98     

018F 75A006           99              mov   LCD_data,#06H  ;Entry mode, auto increment with no shift

0192 C280            100              clr   LCD_rs         ;Selected command register

0194 C281            101              clr   LCD_rw         ;We are writing in instruction register

0196 D282            102              setb  LCD_en         ;Enable H->L

0198 31D2            103                      acall delay

019A C282            104              clr   LCD_en

                     105     

019C 31D2            106                      acall delay

                     107              

019E 22              108              ret                  ;Return from routine

                     109     

                     110     ;-----------------------command sending routine-------------------------------------

019F                 111      lcd_command:

019F F5A0            112              mov   LCD_data,A     ;Move the command to LCD port

01A1 C280            113              clr   LCD_rs         ;Selected command register

01A3 C281            114              clr   LCD_rw         ;We are writing in instruction register

01A5 D282            115              setb  LCD_en         ;Enable H->L

01A7 31D2            116                      acall delay

01A9 C282            117              clr   LCD_en

01AB 31D2            118                      acall delay

                     119         

A51 MACRO ASSEMBLER  QUESTION3                                                            08/29/2017 01:43:55 PAGE     3

01AD 22              120              ret  

                     121     ;-----------------------data sending routine-------------------------------------          
                                       

01AE                 122      lcd_senddata:

01AE F5A0            123              mov   LCD_data,A     ;Move the command to LCD port

01B0 D280            124              setb  LCD_rs         ;Selected data register

01B2 C281            125              clr   LCD_rw         ;We are writing

01B4 D282            126              setb  LCD_en         ;Enable H->L

01B6 31D2            127                      acall delay

01B8 C282            128              clr   LCD_en

01BA 31D2            129              acall delay

01BC 31D2            130                      acall delay

01BE 22              131              ret                  ;Return from busy routine

                     132     

                     133     ;-----------------------text strings sending routine-------------------------------------

01BF                 134     lcd_sendstring:

01BF E4              135              clr   a                  ;clear Accumulator for any previous data

01C0 93              136              movc  a,@a+dptr          ;load the first character in accumulator

01C1 6005            137              jz    exit               ;go to exit if zero

01C3 31AE            138              acall lcd_senddata       ;send first char

01C5 A3              139              inc   dptr               ;increment data pointer

01C6 80F7            140              sjmp  LCD_sendstring     ;jump back to send the next character

01C8                 141     exit:

01C8 22              142              ret                      ;End of routine

                     143                      

                     144     ;-----------------------text strings sending routine-------------------------------------

01C9                 145     lcd_sendstring_name:

01C9 E6              146              mov   a,@r0              ;load the first character in accumulator

01CA 6005            147              jz    exit2              ;go to exit if zero

01CC 31AE            148              acall lcd_senddata       ;send first char

01CE 08              149              inc   r0                 ;increment register

01CF 80F8            150              sjmp  LCD_sendstring_name    ;jump back to send the next character

01D1                 151     exit2:

01D1 22              152              ret                      ;End of routine

                     153     

                     154     ;----------------------delay routine-----------------------------------------------------

01D2                 155     delay:   

                     156             using 1

01D2 C0D0            157                     push psw

01D4 75D008          158                     mov psw,#08H

01D7 7801            159              mov r0,#1

01D9 79FF            160     loop2:   mov r1,#255

01DB D9FE            161     loop1:   djnz r1, loop1

01DD D8FA            162                      djnz r0,loop2

01DF D0D0            163                      pop psw

01E1 22              164                      ret

                     165             

0300                 166     org 300H

0300                 167     update_mm_sec:

0300 E4              168             clr A

0301 B6390C          169             cjne @r0,#39H,skip_

0304 7630            170             mov @r0,#30H

0306 18              171             dec r0

0307 B63506          172             cjne @r0,#35H,skip_

030A 7630            173             mov @r0,#30H

030C 7410            174             mov A,#10H

030E 8001            175             sjmp terminate

0310                 176             skip_:

0310 06              177                     inc @r0

0311                 178             terminate:

0311 22              179     ret

                     180     

0312                 181     update_hh:

0312 18              182             dec r0

0313 B6310B          183             cjne @r0,#31H,single_dig

0316 08              184             inc r0

A51 MACRO ASSEMBLER  QUESTION3                                                            08/29/2017 01:43:55 PAGE     4

0317 B63212          185             cjne @r0,#32H,skip_hh

031A 7631            186             mov @r0,#31H

031C 18              187             dec r0

031D 7630            188             mov @r0,#30H

031F 801D            189             sjmp terminate_

0321                 190             single_dig:

0321 08              191                     inc r0

0322 B63907          192                     cjne @r0,#39H,skip_hh

0325 7630            193                     mov @r0,#30H

0327 18              194                     dec r0

0328 7631            195                     mov @r0,#31H

032A 8001            196                     sjmp terminate_hh

032C                 197             skip_hh:

032C 06              198                     inc @r0

032D                 199             terminate_hh:

032D 22              200     ret

                     201     

032E                 202     update_time:

032E 7877            203             mov r0,#77H

0330 7100            204             acall update_mm_sec

0332 600A            205             jz terminate_

0334 7874            206             mov r0,#74H

0336 7100            207             acall update_mm_sec

0338 6004            208             jz terminate_

033A 7871            209             mov r0,#71H

033C 7112            210             acall update_hh

                     211             

033E                 212             terminate_:

033E 22              213     ret

                     214     

                     215     

                     216     ;-------------------------------------Timer0 Interrupt------------------------------------

033F                 217     timer_int0:

033F DF04            218                     djnz r7,term_int

0341 712E            219                     acall update_time

0343 7F1E            220                     mov r7,#30

0345                 221             term_int:

0345 32              222                     reti

                     223     

                     224     ;-----------------------------------------Timer1 Interrupt---------------------------------

                     225     

0346                 226     timer_int1:                                             ;Current stable value at 4FH and pr
                             ev stable value at 4EH

0346 C0D0            227             push psw

0348 C0E0            228             push acc

                     229             

034A E590            230             mov  A,P1                                       ;Taking the input from port 1

034C 540F            231             anl  A,#0FH

034E B54F05          232             cjne A,4FH,new                          ;First check from the current acceptable va
                             lue

0351 854F4E          233             mov 4EH,4FH                                     ;Prev state is same as current

0354 8010            234             sjmp check

0356                 235             new:

0356 B54D08          236                     cjne A,4DH,new2                 ;If already occured then 4FH = 4EH

0359 854F4E          237                     mov  4EH,4FH                    ;4EH now stores the previous stable state

035C 854D4F          238                     mov  4FH,4DH                    ;4FH, current state changes

035F 8005            239                     sjmp check

0361                 240             new2:

0361 F54D            241                     mov 4DH,A                               ;If occurs for the first time

0363 854F4E          242                     mov 4EH,4FH

0366                 243             check:

0366 E54F            244                     mov A,4FH                               ;Current State

0368 30E01D          245                     jnb 0E0H,enable

036B C28C            246                     clr TR0                                 ;Stopping the timer

036D 654E            247                     xrl A,4EH

036F F5F0            248                     mov B,A

A51 MACRO ASSEMBLER  QUESTION3                                                            08/29/2017 01:43:55 PAGE     5

0371 30F104          249                             jnb B.1,min

0374 7877            250                             mov r0,#77H

0376 7100            251                             acall update_mm_sec

0378                 252                     min:

0378 30F204          253                             jnb B.2,hh

037B 7874            254                             mov r0,#74H

037D 7100            255                             acall update_mm_sec

037F                 256                     hh:

037F 30F308          257                             jnb B.3,term

0382 7871            258                             mov r0,#71H

0384 7112            259                             acall update_hh

                     260                             

0386 8002            261                     sjmp term

0388                 262             enable: 

0388 D28C            263                     setb TR0                                ;Restarting T0

038A                 264             term:

038A 75900F          265                     mov P1,#0FH                             ;Setting the port for input again

038D 758D64          266                     mov TH1,#64H

                     267                     

                     268                     

0390 D0E0            269             pop acc

0392 D0D0            270             pop psw

0394 32              271     reti

                     272     

0400                 273     org 400H

0400                 274             my_string:

0400 20202020        275                     DB '      Time        ',00H

0404 20205469                
0408 6D652020                
040C 20202020                
0410 202000                  
                     276     end

A51 MACRO ASSEMBLER  QUESTION3                                                            08/29/2017 01:43:55 PAGE     6

SYMBOL TABLE LISTING
------ ----- -------


N A M E              T Y P E  V A L U E   ATTRIBUTES

ACC . . . . . . . .  D ADDR   00E0H   A   
B . . . . . . . . .  D ADDR   00F0H   A   
CHECK . . . . . . .  C ADDR   0366H   A   
DELAY . . . . . . .  C ADDR   01D2H   A   
ENABLE. . . . . . .  C ADDR   0388H   A   
EXIT. . . . . . . .  C ADDR   01C8H   A   
EXIT2 . . . . . . .  C ADDR   01D1H   A   
HH. . . . . . . . .  C ADDR   037FH   A   
IE. . . . . . . . .  D ADDR   00A8H   A   
INIT_CLOCK. . . . .  C ADDR   0100H   A   
LCD_COMMAND . . . .  C ADDR   019FH   A   
LCD_DATA. . . . . .  D ADDR   00A0H   A   
LCD_EN. . . . . . .  B ADDR   0080H.2 A   
LCD_INIT. . . . . .  C ADDR   0162H   A   
LCD_RS. . . . . . .  B ADDR   0080H.0 A   
LCD_RW. . . . . . .  B ADDR   0080H.1 A   
LCD_SENDDATA. . . .  C ADDR   01AEH   A   
LCD_SENDSTRING. . .  C ADDR   01BFH   A   
LCD_SENDSTRING_NAME  C ADDR   01C9H   A   
LOOP1 . . . . . . .  C ADDR   01DBH   A   
LOOP2 . . . . . . .  C ADDR   01D9H   A   
LOOP_MAIN . . . . .  C ADDR   0149H   A   
MAIN. . . . . . . .  C ADDR   0137H   A   
MIN . . . . . . . .  C ADDR   0378H   A   
MY_STRING . . . . .  C ADDR   0400H   A   
NEW . . . . . . . .  C ADDR   0356H   A   
NEW2. . . . . . . .  C ADDR   0361H   A   
P0. . . . . . . . .  D ADDR   0080H   A   
P1. . . . . . . . .  D ADDR   0090H   A   
P2. . . . . . . . .  D ADDR   00A0H   A   
PSW . . . . . . . .  D ADDR   00D0H   A   
PT1 . . . . . . . .  B ADDR   00B8H.3 A   
SINGLE_DIG. . . . .  C ADDR   0321H   A   
SKIP_ . . . . . . .  C ADDR   0310H   A   
SKIP_HH . . . . . .  C ADDR   032CH   A   
SP. . . . . . . . .  D ADDR   0081H   A   
START_TIMERS. . . .  C ADDR   0125H   A   
TCON. . . . . . . .  D ADDR   0088H   A   
TERM. . . . . . . .  C ADDR   038AH   A   
TERMINATE . . . . .  C ADDR   0311H   A   
TERMINATE_. . . . .  C ADDR   033EH   A   
TERMINATE_HH. . . .  C ADDR   032DH   A   
TERM_INT. . . . . .  C ADDR   0345H   A   
TH1 . . . . . . . .  D ADDR   008DH   A   
TIMER_INT0. . . . .  C ADDR   033FH   A   
TIMER_INT1. . . . .  C ADDR   0346H   A   
TMOD. . . . . . . .  D ADDR   0089H   A   
TR0 . . . . . . . .  B ADDR   0088H.4 A   
TR1 . . . . . . . .  B ADDR   0088H.6 A   
UPDATE_HH . . . . .  C ADDR   0312H   A   
UPDATE_MM_SEC . . .  C ADDR   0300H   A   
UPDATE_TIME . . . .  C ADDR   032EH   A   


REGISTER BANK(S) USED: 0 1 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
